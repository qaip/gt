concept_undirected_graph
=> nrel_main_idtf:
	[невзвешенный граф] (* <- lang_ru;; *);
	[unweighted graph] (* <- lang_en;; *);

=> nrel_idtf:
	[граф без весов] (* <- lang_ru;; *);;

definition -> definition_of_undirected_graph (*
	-> rrel_key_sc_element: concept_undirected_graph;;

	<= nrel_sc_text_translation: ... (*
		-> [Граф, у которого каждому ребру не ставится в соответствие некоторое значение, или вес] (* <- lang_ru;; *);;
		-> [An unweighted graph is a graph in which each edge is not assigned some value, or weight] (* <- lang_en;; *);;
	*);;

	=> nrel_main_idtf:
		[Опр. (невзвешенный граф)] (* <- lang_ru;; *);
		[Def. (unweighted graph)] (* <- lang_en;; *);;

	=> nrel_using_constants: {
		concept_graph;
		concept_edge;
		rrel_edge
	};;
*);;

statement -> statement_of_usage_unweighted_graph (*
	-> rrel_key_sc_element: concept_undirected_graph;;

	<= nrel_sc_text_translation: ... (*
		-> [Невзвешенные графы часто используются в графовых алгоритмах, таких как поиск в ширину, поиск в глубину, алгоритм Дейкстры и алгоритмы поиска минимального остовного дерева] (* <- lang_ru;; *);;
		-> [Unweighted graphs are often used in graph algorithms such as breadth first search, depth first search, Dijkstra algorithm, and algorithms for finding minimum spanning trees] (* <- lang_en;; *);;
	*);;

	=> nrel_main_idtf:
		[Утв. (Использование невзвешенных графов)] (* <- lang_ru;; *);
		[Stat. (Usage of unweighted graphs)] (* <- lang_en;; *);;

	=> nrel_using_constants: {
		concept_graph;
		concept_algorithms
	};;
*);;

statement -> statement_of_connectedness_unweighted_graph (*
	-> rrel_key_sc_element: concept_undirected_graph;;

	<= nrel_sc_text_translation: ... (*
		-> [Невзвешенный граф называется связным, если для каждой пары вершин графа существует путь, соединяющий эти вершины. Иначе граф называется несвязным] (* <- lang_ru;; *);;
		-> [An unweighted graph is connected if there is a path connecting each pair of vertices in the graph. Otherwise, the graph is called disconnected] (* <- lang_en;; *);;
	*);;

	=> nrel_main_idtf:
		[Утв. (Связность невзвешенных графов)] (* <- lang_ru;; *);
		[Stat. (Connectedness of unweighted graphs)] (* <- lang_en;; *);;

	=> nrel_using_constants: {
		concept_graph;
		concept_path
	};;
*);;

statement -> statement_of_bipartiteness (*
	-> rrel_key_sc_element: concept_undirected_graph;;

	<= nrel_sc_text_translation: ... (*
		-> [Невзвешенный граф является двудольным, если вершины графа можно разбить на два непересекающихся множества таким образом, что каждое ребро графа соединяет вершину одного множества с вершиной другого множества. Иначе граф называется недвудольным] (* <- lang_ru;; *);;
		-> [An unweighted graph is bipartite if its vertices can be partitioned into two non-overlapping sets in such a way that each edge of the graph connects a vertex in one set to a vertex in the other set. Otherwise, the graph is called non-bipartite] (* <- lang_en;; *);;
	*);;

	=> nrel_main_idtf:
		[Утв. (Двудольность невзвешенных графов)] (* <- lang_ru;; *);
		[Stat. (Bipartiteness of unweighted graphs)] (* <- lang_en;; *);;

	=> nrel_using_constants: {
		concept_graph;
		concept_bipartite_graph
	};;
*);;

statement -> statement_of_unweighted_graph_as_tree (*
	-> rrel_key_sc_element: concept_undirected_graph;;

	<= nrel_sc_text_translation: ... (*
		-> [Невзвешенный граф является деревом, если он связный и не содержит циклов] (* <- lang_ru;; *);;
		-> [An unweighted graph is a tree if it is connected and contains no cycles] (* <- lang_en;; *);;
	*);;

	=> nrel_main_idtf:
		[Утв. (Невзвешенный граф как дерево)] (* <- lang_ru;; *);
		[Stat. (Unweighted graph as a tree)] (* <- lang_en;; *);;

	=> nrel_using_constants: {
		concept_graph;
		concept_unweighted_graph;
		concept_tree
	};;
*);;

statement -> statement_of_complement_graph_unweighted_graph (*
	-> rrel_key_sc_element: concept_undirected_graph;;

	<= nrel_sc_text_translation: ... (*
		-> [Дополнением невзвешенного графа является граф, содержащий все недостающие ребра между вершинами исходного графа, которые не являются ребрами этого графа] (* <- lang_ru;; *);;
		-> [The complement of an unweighted graph is a graph that contains all the missing edges between the vertices of the original graph that are not already edges of the graph] (* <- lang_en;; *);;
	*);;

	=> nrel_main_idtf:
		[Утв. (Дополнение невзвешенного графа)] (* <- lang_ru;; *);
		[Stat. (Complement of an unweighted graph)] (* <- lang_en;; *);;

	=> nrel_using_constants: {
		concept_graph;
		concept_complete_graph
	};;
*);;

statement -> statement_of_coloring_unweighted_graph (*
	-> rrel_key_sc_element: concept_undirected_graph;;

	<= nrel_sc_text_translation: ... (*
		-> [Раскраской невзвешенного графа является такое отображение множества вершин графа в множество цветов, что смежные вершины отображаются в разные цвета] (* <- lang_ru;; *);;
		-> [Coloring of an unweighted graph is a mapping of the vertices of the graph to a set of colors such that adjacent vertices are mapped to different colors] (* <- lang_en;; *);;
	*);;

	=> nrel_main_idtf:
		[Утв. (Раскраска невзвешенного графа)] (* <- lang_ru;; *);
		[Stat. (Coloring of an unweighted graph)] (* <- lang_en;; *);;

	=> nrel_using_constants: {
		concept_graph;
		concept_graph_coloring
	};;
*);;

sc_node_class ->
	concept_graph;
	concept_edge;
	concept_graph;
	concept_algorithms;
	concept_graph;
	concept_path;
	concept_graph;
	concept_bipartite_graph;
	concept_graph;
	concept_unweighted_graph;
	concept_tree;
	concept_graph;
	concept_complete_graph;
	concept_graph;
	concept_graph_coloring;;

sc_node_role_relation ->
	rrel_edge;;
