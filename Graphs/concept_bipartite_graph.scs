concept_bipartite_graph
=> nrel_main_idtf:
	[двудольный граф] (* <- lang_ru;; *);
	[bipartite graph] (* <- lang_en;; *);;

definition -> definition_of_bipartite_graph (*
	-> rrel_key_sc_element: concept_bipartite_graph;;

	<= nrel_sc_text_translation: ... (*
		-> [Граф, множество вершин которого можно разбить на два непересакающихся множества U и V, таким образом, что ребро соединяет одну вершину из множества U с другой вершиной из множества V] (* <- lang_ru;; *);;
		-> [In the mathematical field of graph theory, a bipartite graph is a graph whose vertices can be divided into two disjoint sets U and V such that every edge connects a vertex in U to one in V] (* <- lang_en;; *);;
	*);;

	=> nrel_main_idtf:
		[Опр. (двудольный граф)] (* <- lang_ru;; *);
		[Def. (bipartite graph)] (* <- lang_en;; *);;

	=> nrel_using_constants: {
		concept_graph;
		concept_vertex;
		concept_edge;
		rrel_edge;
		rrel_vertex
	};;
*);;

statement -> statement_of_bipartite_graph_properties (*
	-> rrel_key_sc_element: concept_bipartite_graph;;

	<= nrel_sc_text_translation: ... (*
		-> [Двудольные графы имеют ряд уникальных свойств. Например, в двудольном графе не может быть циклов нечётной длины, а минимальное вершинное покрытие двудольного графа равно количеству максимальных паросочетаний. Кроме того, двудольные графы имеют множество применений в различных областях, таких как теория кодирования, теория графов и теория игр] (* <- lang_ru;; *);;
		-> [Bipartite graphs have a number of unique properties. For example, in a bipartite graph, there can be no cycles of odd length, and the minimum vertex cover of a bipartite graph is equal to the number of maximum matchings. In addition, bipartite graphs have numerous applications in various fields, such as coding theory, graph theory, and game theory] (* <- lang_en;; *);;
	*);;

	=> nrel_main_idtf:
		[Утв. (Особенности двудольных графов)] (* <- lang_ru;; *);
		[Stat. (Properties of bipartite graphs)] (* <- lang_en;; *);;

	=> nrel_using_constants: {
		concept_graph;
		concept_vertex_cover;
		concept_maximum_matching;
		concept_cycle
	};;
*);;

statement -> statement_of_bipartite_graph_algorithms (*
	-> rrel_key_sc_element: concept_bipartite_graph;;

	<= nrel_sc_text_translation: ... (*
		-> [Для решения задач на двудольных графах используются различные алгоритмы, такие как поиск максимального паросочетания, поиск минимального вершинного покрытия, проверка двудольности графа, поиск максимального потока и прочие] (* <- lang_ru;; *);;
		-> [Various algorithms are used to solve problems on bipartite graphs, such as finding maximum matchings, finding minimum vertex covers, checking bipartiteness of a graph, finding maximum flows, etc] (* <- lang_en;; *);;
	*);;

	=> nrel_main_idtf:
		[Утв. (Алгоритмы для двудольных графов)] (* <- lang_ru;; *);
		[Stat. (Algorithms for bipartite graphs)] (* <- lang_en;; *);;

	=> nrel_using_constants: {
		concept_graph;
		concept_maximum_matching;
		concept_vertex_cover;
		concept_bipartite_graph;
		concept_max_flow
	};;
*);;

statement -> statement_of_complement_bipartite_graph (*
	-> rrel_key_sc_element: concept_bipartite_graph;;

	<= nrel_sc_text_translation: ... (*
		-> [Дополнением двудольного графа является граф, множество вершин которого является объединением множеств вершин исходного графа, а множество рёбер является множеством всех возможных рёбер между парами вершин, которые не соединены в исходном графе] (* <- lang_ru;; *);;
		-> [The complement of a bipartite graph is a graph whose vertex set is the union of the vertex sets of the original graph, and whose edge set is the set of all possible edges between pairs of vertices that are not connected in the original graph] (* <- lang_en;; *);;
	*);;

	=> nrel_main_idtf:
		[Утв. (Дополнение двудольного графа)] (* <- lang_ru;; *);
		[Stat. (Complement of a bipartite graph)] (* <- lang_en;; *);;

	=> nrel_using_constants: {
		concept_graph;
		concept_edge;
		concept_vertex;
		concept_bipartite_graph;
		rrel_edge;
		rrel_vertex
	};;
*);;

sc_node_class ->
	concept_graph;
	concept_vertex;
	concept_edge;
	concept_graph;
	concept_vertex_cover;
	concept_maximum_matching;
	concept_cycle;
	concept_graph;
	concept_maximum_matching;
	concept_vertex_cover;
	concept_bipartite_graph;
	concept_max_flow;
	concept_graph;
	concept_edge;
	concept_vertex;
	concept_bipartite_graph;;

sc_node_role_relation ->
	rrel_edge;
	rrel_vertex;
	rrel_edge;
	rrel_vertex;;
