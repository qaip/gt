concept_growing_tree
=> nrel_main_idtf:
	[растущее дерево] (* <- lang_ru;; *);
	[growing tree] (* <- lang_en;; *);;

definition -> definition_of_growing_tree (*
	-> rrel_key_sc_element: concept_growing_tree;;

	<= nrel_sc_text_translation: ... (*
		-> [Дерево, в котором есть все вершины графа, а рёбра соединяют их таким образом, что получается дерево. То есть, растущее дерево подграф исходного графа, который содержит все вершины исходного графа и является деревом] (* <- lang_ru;; *);;
		-> [A growing tree is a subgraph of a graph that contains all the vertices of the graph and is a tree. That is, a growing tree is a subgraph of the original graph that contains all the vertices of the original graph and is a tree] (* <- lang_en;; *);;
	*);;

	=> nrel_main_idtf:
		[Опр. (растущее дерево)] (* <- lang_ru;; *);
		[Def. (growing tree)] (* <- lang_en;; *);;

	=> nrel_using_constants: {
		concept_graph;
		concept_vertex;
		concept_edge;
		concept_tree;
		rrel_vertex;
		rrel_edge
	};;
*);;

statement -> statement_of_growing_tree_representation (*
	-> rrel_key_sc_element: concept_growing_tree;;

	<= nrel_sc_text_translation: ... (*
		-> [Растущие деревья удобно изображать в виде рисунков, состоящих из точек, соответствующих вершинам, и линий, соединяющих эти точки, соответствующих рёбрам. При этом в растущих деревьях всегда находится одна вершина, из которой исходят все остальные вершины, и она называется корневой] (* <- lang_ru;; *);;
		-> [It is convenient to depict growing trees in the form of drawings consisting of dots, corresponding to the vertices, and lines connecting these points, corresponding ribs. At the same time, in growing trees there is always one vertex, from which all other vertices emanate, and it is called the root] (* <- lang_en;; *);;
	*);;

	=> nrel_main_idtf:
		[Утв. (Изображение растущих деревьев)] (* <- lang_ru;; *);
		[Stat. (Growing trees representation)] (* <- lang_en;; *);;

	=> nrel_using_constants: {
		concept_vertex;
		concept_edge;
		concept_tree;
		rrel_edge;
		rrel_vertex
	};;
*);;

sc_node_class ->
	concept_graph;
	concept_vertex;
	concept_edge;
	concept_tree;
	concept_vertex;
	concept_edge;
	concept_tree;;

sc_node_role_relation ->
	rrel_vertex;
	rrel_edge;
	rrel_edge;
	rrel_vertex;;
