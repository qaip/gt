concept_k_d_tree
=> nrel_main_idtf:
	[k-d дерево] (* <- lang_ru;; *);
	[k-d tree] (* <- lang_en;; *);;

definition -> definition_of_k_d_tree (*
	-> rrel_key_sc_element: concept_k_d_tree;;

	<= nrel_sc_text_translation: ... (*
		-> [Дерево, используемое для поиска точек в k-мерном пространстве] (* <- lang_ru;; *);;
		-> [A tree used to search for points in k-dimensional space] (* <- lang_en;; *);;
	*);;

	=> nrel_main_idtf:
		[Опр. (k-d дерево)] (* <- lang_ru;; *);
		[Def. (k-d tree)] (* <- lang_en;; *);;

	=> nrel_using_constants: {
		concept_tree;
		concept_vertex;
		rrel_vertex
	};;
*);;

statement -> statement_of_k_d_tree_theorem (*
	-> rrel_key_sc_element: concept_k_d_tree;;

	<= nrel_sc_text_translation: ... (*
		-> [K-d дерево может быть использовано для быстрого поиска ближайших соседей точки в k-мерном пространстве] (* <- lang_ru;; *);;
		-> [k-d trees can be used for efficient nearest neighbor search in k-dimensional space] (* <- lang_en;; *);;
	*);;

	=> nrel_main_idtf:
		[Утв. (Теорема о k-d деревьях)] (* <- lang_ru;; *);
		[Stat. (k-d tree theorem)] (* <- lang_en;; *);;

	=> nrel_using_constants: {
		concept_tree;
		concept_k_d_tree
	};;
*);;

statement -> statement_of_balanced_k_d_tree_theorem (*
	-> rrel_key_sc_element: concept_k_d_tree;;

	<= nrel_sc_text_translation: ... (*
		-> [Сбалансированное k-d дерево может быть использовано для быстрого поиска ближайших соседей точки в k-мерном пространстве] (* <- lang_ru;; *);;
		-> [A balanced k-d tree can be used for efficient nearest neighbor search in k-dimensional space] (* <- lang_en;; *);;
	*);;

	=> nrel_main_idtf:
		[Утв. (Теорема о сбалансированных k-d деревьях)] (* <- lang_ru;; *);
		[Stat. (Balanced k-d tree theorem)] (* <- lang_en;; *);;

	=> nrel_using_constants: {
		concept_balanced_tree;
		concept_vertex;
		concept_tree;
		concept_k_d_tree;
		rrel_vertex
	};;
*);;

sc_node_class ->
	concept_tree;
	concept_vertex;
	concept_tree;
	concept_k_d_tree;
	concept_balanced_tree;
	concept_vertex;
	concept_tree;
	concept_k_d_tree;;

sc_node_role_relation ->
	rrel_vertex;
	rrel_vertex;;
