nrel_graph_radius
=> nrel_main_idtf:
	[радиус графа*] (* <- lang_ru;; *);
	[graph radius*] (* <- lang_en;; *);;

definition -> definition_of_graph_radius (*
	-> rrel_key_sc_element: nrel_graph_radius;;

	<= nrel_sc_text_translation: ... (*
		-> [Минимальный эксцентриситет вершины графа] (* <- lang_ru;; *);;
		-> [The minimum eccentricity of a vertex in the graph] (* <- lang_en;; *);;
	*);;

	=> nrel_main_idtf:
		[Опр. (радиус графа)] (* <- lang_ru;; *);
		[Def. (graph radius)] (* <- lang_en;; *);;

	=> nrel_using_constants: {
		concept_vertex;
		concept_graph;
		concept_eccentricity;
		rrel_vertex
	};;
*);;

statement -> statement_of_radius_center_theorem (*
	-> rrel_key_sc_element: nrel_graph_radius;;

	<= nrel_sc_text_translation: ... (*
		-> [Центр графа-это множество вершин, у которых эксцентриситет равен радиусу графа] (* <- lang_ru;; *);;
		-> [The center of a graph is the set of vertices that have an eccentricity equal to the radius of the graph] (* <- lang_en;; *);;
	*);;

	=> nrel_main_idtf:
		[Утв. (Теорема о радиусе и центре)] (* <- lang_ru;; *);
		[Stat. (Radius and center theorem)] (* <- lang_en;; *);;

	=> nrel_using_constants: {
		concept_graph_center;
		concept_graph_eccentricity;
		concept_vertex;
		rrel_vertex;
		nrel_graph_radius
	};;
*);;

arity->...
    (*
        ->nrel_graph_radius;;
        =>nrel_measurement:2;;
    *);;

nrel_graph_radius=>nrel_first_domain:concept_graph;
    =>nrel_second_domain:number;
        => nrel_definitional_domain:
	...
	(*
		 <=nrel_combination:
        {
			number;
            concept_graph
        };;
	*);;

    relation=>nrel_inclusion:binary_relation;;
    relation=>nrel_inclusion:oriented_relation;;

binary_relation=>nrel_inclusion:antireflexive_relation(*->nrel_graph_radius;;*);
    =>nrel_inclusion:antitransitive_relation(*->nrel_graph_radius;;*);
    =>nrel_inclusion:antisymmetric_relation(*->nrel_graph_radius;;*);;
    oriented_relation->nrel_graph_radius;;

sc_node_norole_relation -> nrel_graph_radius;;

sc_node_class ->
	concept_vertex;
	concept_graph;
	concept_eccentricity;
	concept_graph_center;
	concept_graph_eccentricity;
	concept_vertex;;

sc_node_norole_relation ->
	nrel_graph_radius;;

sc_node_role_relation ->
	rrel_vertex;
	rrel_vertex;;
