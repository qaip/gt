concept_shortest_path
=> nrel_main_idtf:
	[кратчайший путь] (* <- lang_ru;; *);
	[shortest path] (* <- lang_en;; *);;

definition -> definition_of_shortest_path (*
	-> rrel_key_sc_element: concept_shortest_path;;

	<= nrel_sc_text_translation: ... (*
		-> [Путь в графе, имеющий наименьшую сумму весов рёбер] (* <- lang_ru;; *);;
		-> [The path in a graph with the smallest sum of edge weights] (* <- lang_en;; *);;
	*);;

	=> nrel_main_idtf:
		[Опр. (кратчайший путь)] (* <- lang_ru;; *);
		[Def. (shortest path)] (* <- lang_en;; *);;

	=> nrel_using_constants: {
		concept_graph_path;
		nrel_rib_weight
	};;
*);;

statement -> statement_of_shortest_path_weight_theorem (*
	-> rrel_key_sc_element: concept_shortest_path;;

	<= nrel_sc_text_translation: ... (*
		-> [Алгоритм Дейкстры находит кратчайший путь во взвешенном графе] (* <- lang_ru;; *);;
		-> [Dijkstras algorithm finds the shortest path in a weighted graph] (* <- lang_en;; *);;
	*);;

	=> nrel_main_idtf:
		[Утв. (Теорема о кратчайшем взвешенном пути)] (* <- lang_ru;; *);
		[Stat. (Shortest weighted path theorem)] (* <- lang_en;; *);;

	=> nrel_using_constants: {
		concept_dijkstra_algorithm;
		concept_weighted_graph
	};;
*);;

statement -> statement_of_floyd_warshall_algorithm (*
	-> rrel_key_sc_element: concept_shortest_path;;

	<= nrel_sc_text_translation: ... (*
		-> [Алгоритм, находящий кратчайшие расстояния между всеми парами вершин в графе] (* <- lang_ru;; *);;
		-> [An algorithm that finds the shortest distances between all pairs of vertices in a graph] (* <- lang_en;; *);;
	*);;

	=> nrel_main_idtf:
		[Утв. (Алгоритм Флойда-Уоршелла)] (* <- lang_ru;; *);
		[Stat. (Floyd-Warshall algorithm)] (* <- lang_en;; *);;

	=> nrel_using_constants: {
		concept_floyd_warshall_algorithm;
		concept_graph_path;
		concept_vertex;
		rrel_vertex
	};;
*);;

sc_node_class ->
	concept_graph_path;
	concept_dijkstra_algorithm;
	concept_weighted_graph;
	concept_floyd_warshall_algorithm;
	concept_graph_path;
	concept_vertex;;

sc_node_norole_relation ->
	nrel_rib_weight;;

sc_node_role_relation ->
	rrel_vertex;;
