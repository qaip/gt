nrel_chain_weight
=> nrel_main_idtf:
	[вес цепи*] (* <- lang_ru;; *);
	[chain weight*] (* <- lang_en;; *);;

definition -> definition_of_chain_weight (*
	-> rrel_key_sc_element: nrel_chain_weight;;

	<= nrel_sc_text_translation: ... (*
		-> [Сумма весов ребер в цепи] (* <- lang_ru;; *);;
		-> [The sum of the weights of the edges in a chain] (* <- lang_en;; *);;
	*);;

	=> nrel_main_idtf:
		[Опр. (вес цепи)] (* <- lang_ru;; *);
		[Def. (chain weight)] (* <- lang_en;; *);;

	=> nrel_using_constants: {
		concept_edge;
		concept_graph_chain;
		rrel_edge;
		nrel_rib_weight
	};;
*);;

statement -> statement_of_proposition_chain_shortest_weight (*
	-> rrel_key_sc_element: nrel_chain_weight;;

	<= nrel_sc_text_translation: ... (*
		-> [Кратчайшая цепь между двумя вершинами является единственной] (* <- lang_ru;; *);;
		-> [The chain with the shortest weight between two vertices is unique] (* <- lang_en;; *);;
	*);;

	=> nrel_main_idtf:
		[Утв. (Свойство кратчайшего веса цепи)] (* <- lang_ru;; *);
		[Stat. (Shortest Chain Weight Property)] (* <- lang_en;; *);;

	=> nrel_using_constants: {
		concept_graph_chain;
		rrel_vertex;
		nrel_rib_weight
	};;
*);;

statement -> statement_of_proposition_chain_longest_weight (*
	-> rrel_key_sc_element: nrel_chain_weight;;

	<= nrel_sc_text_translation: ... (*
		-> [Длиннейшая цепь между двумя вершинами является единственной] (* <- lang_ru;; *);;
		-> [The chain with the longest weight between two vertices is unique] (* <- lang_en;; *);;
	*);;

	=> nrel_main_idtf:
		[Утв. (Свойство длиннейшего веса цепи)] (* <- lang_ru;; *);
		[Stat. (Longest Chain Weight Property)] (* <- lang_en;; *);;

	=> nrel_using_constants: {
		concept_graph_chain;
		rrel_vertex;
		nrel_rib_weight
	};;
*);;

statement -> statement_of_proposition_chain_additivity (*
	-> rrel_key_sc_element: nrel_chain_weight;;

	<= nrel_sc_text_translation: ... (*
		-> [Вес цепи, соединяющей две вершины, равен сумме весов цепей, соединяющих эти вершины через промежуточные вершины] (* <- lang_ru;; *);;
		-> [The weight of the chain connecting two vertices is equal to the sum of the weights of the chains connecting these vertices through intermediate vertices] (* <- lang_en;; *);;
	*);;

	=> nrel_main_idtf:
		[Утв. (Аддитивность веса цепей)] (* <- lang_ru;; *);
		[Stat. (Additivity of Chain Weights)] (* <- lang_en;; *);;

	=> nrel_using_constants: {
		concept_graph_chain;
		rrel_vertex;
		nrel_rib_weight
	};;
*);;

statement -> statement_of_proposition_spanning_chain (*
	-> rrel_key_sc_element: nrel_chain_weight;;

	<= nrel_sc_text_translation: ... (*
		-> [Цепь, проходящая через каждую вершину графа ровно один раз, называется охватывающей цепью] (* <- lang_ru;; *);;
		-> [A chain that passes through every vertex of a graph exactly once is called a spanning chain] (* <- lang_en;; *);;
	*);;

	=> nrel_main_idtf:
		[Утв. (Охватывающая цепь)] (* <- lang_ru;; *);
		[Stat. (Spanning Chain)] (* <- lang_en;; *);;

	=> nrel_using_constants: {
		concept_graph_chain;
		concept_graph;
		rrel_vertex
	};;
*);;

arity->...
    (*
        ->nrel_chain_weight;;
        =>nrel_measurement:2;;
    *);;

nrel_chain_weight=>nrel_first_domain:concept_graph;
    =>nrel_second_domain:number;
        => nrel_definitional_domain:
	...
	(*
		 <=nrel_combination:
        {
			number;
            concept_graph
        };;
	*);;

    relation=>nrel_inclusion:binary_relation;;
    relation=>nrel_inclusion:oriented_relation;;

binary_relation=>nrel_inclusion:antireflexive_relation(*->nrel_chain_weight;;*);
    =>nrel_inclusion:antitransitive_relation(*->nrel_chain_weight;;*);
    =>nrel_inclusion:antisymmetric_relation(*->nrel_chain_weight;;*);;
    oriented_relation->nrel_chain_weight;;

sc_node_norole_relation -> nrel_chain_weight;;


sc_node_class ->
	concept_edge;
	concept_graph_chain;
	concept_graph;;

sc_node_norole_relation ->
	nrel_rib_weight;;

sc_node_role_relation ->
	rrel_edge;
	rrel_vertex;;
