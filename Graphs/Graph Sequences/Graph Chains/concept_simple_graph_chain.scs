concept_simple_graph_chain
=> nrel_main_idtf:
	[простая графовая цепь] (* <- lang_ru;; *);
	[simple graph chain] (* <- lang_en;; *);;

definition -> definition_of_simple_graph_chain (*
	-> rrel_key_sc_element: concept_simple_graph_chain;;

	<= nrel_sc_text_translation: ... (*
		-> [Последовательность вершин простого графа, такая что каждые две соседние вершины соединены ребром и все вершины уникальны] (* <- lang_ru;; *);;
		-> [A sequence of vertices in a simple graph such that every two adjacent vertices are connected by an edge and all vertices are unique] (* <- lang_en;; *);;
	*);;

	=> nrel_main_idtf:
		[Опр. (простая графовая цепь)] (* <- lang_ru;; *);
		[Def. (simple graph chain)] (* <- lang_en;; *);;

	=> nrel_using_constants: {
		concept_vertex;
		concept_edge;
		concept_graph_sequence;
		rrel_vertex;
		rrel_edge
	};;
*);;

statement -> statement_of_longest_simple_path_theorem (*
	-> rrel_key_sc_element: concept_simple_graph_chain;;

	<= nrel_sc_text_translation: ... (*
		-> [Самая длинная простая цепь в графе может быть найдена с помощью алгоритма Дейкстры] (* <- lang_ru;; *);;
		-> [The longest simple chain in a graph can be found using Dijkstras algorithm] (* <- lang_en;; *);;
	*);;

	=> nrel_main_idtf:
		[Утв. (Теорема о самой длинной простой цепи)] (* <- lang_ru;; *);
		[Stat. (Longest simple path theorem)] (* <- lang_en;; *);;

	=> nrel_using_constants: {
		concept_graph;
		concept_dijkstra_algorithm;
		concept_chain_length
	};;
*);;

sc_node_class ->
	concept_vertex;
	concept_edge;
	concept_graph_sequence;
	concept_graph;
	concept_dijkstra_algorithm;
	concept_chain_length;;

sc_node_role_relation ->
	rrel_vertex;
	rrel_edge;;
