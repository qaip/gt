concept_length_of_sequence
=> nrel_main_idtf:
	[длина маршрута] (* <- lang_ru;; *);
	[length of sequence] (* <- lang_en;; *);

=> nrel_idtf:
	[длина маршрута графа] (* <- lang_ru;; *);
	[длина последовательности графа] (* <- lang_ru;; *);
	[length of graph sequence] (* <- lang_en;; *);
	[length of graph route] (* <- lang_en;; *);;

definition -> definition_of_length_of_sequence (*
	-> rrel_key_sc_element: concept_length_of_sequence;;

	<= nrel_sc_text_translation: ... (*
		-> [количество рёбер в маршруте учитывая повторения] (* <- lang_ru;; *);;
		-> [the number of edges in the sequence, taking into account repetitions] (* <- lang_en;; *);;
	*);;

	=> nrel_main_idtf:
		[Опр. (длина маршрута)] (* <- lang_ru;; *);
		[Def. (length of sequence)] (* <- lang_en;; *);;

	=> nrel_using_constants: {
		concept_edge;
		concept_sequence;
		rrel_edge
	};;
*);;

statement -> statement_of_length_equals_zero (*
	-> rrel_key_sc_element: concept_length_of_sequence;;

	<= nrel_sc_text_translation: ... (*
		-> [Длина равняется нулю, если путь состоит только из одной вершины] (* <- lang_ru;; *);;
		-> [The length is zero if the path consists of only one vertex] (* <- lang_en;; *);;
	*);;

	=> nrel_main_idtf:
		[Утв. (Условие равенства длины маршрута нулю)] (* <- lang_ru;; *);
		[Stat. (Zero route length condition)] (* <- lang_en;; *);;

	=> nrel_using_constants: {
		concept_vertex;
		concept_sequence;
		rrel_vertex
	};;
*);;

statement -> statement_of_route_shortest_path_theorem (*
	-> rrel_key_sc_element: concept_length_of_sequence;;

	<= nrel_sc_text_translation: ... (*
		-> [Длина кратчайшего пути между двумя вершинами в графе равна числу рёбер в кратчайшем маршруте между этими вершинами] (* <- lang_ru;; *);;
		-> [The length of the shortest path between two vertices in a graph is equal to the number of edges in the shortest route between those vertices] (* <- lang_en;; *);;
	*);;

	=> nrel_main_idtf:
		[Утв. (Теорема о кратчайшем пути)] (* <- lang_ru;; *);
		[Stat. (Shortest path theorem)] (* <- lang_en;; *);;

	=> nrel_using_constants: {
		concept_graph_sequence;
		concept_edge
	};;
*);;

statement -> statement_of_route_longest_path_theorem (*
	-> rrel_key_sc_element: concept_length_of_sequence;;

	<= nrel_sc_text_translation: ... (*
		-> [Нахождение самого длинного маршрута в графе NP-полная задача, которая не может быть решена за полиномиальное время] (* <- lang_ru;; *);;
		-> [Finding the longest route in a graph is an NP-complete problem that cannot be solved in polynomial time] (* <- lang_en;; *);;
	*);;

	=> nrel_main_idtf:
		[Утв. (Теорема о самом длинном маршруте)] (* <- lang_ru;; *);
		[Stat. (Longest route theorem)] (* <- lang_en;; *);;

	=> nrel_using_constants: {
		concept_graph_sequence
	};;
*);;

statement -> statement_of_route_existence_theorem (*
	-> rrel_key_sc_element: concept_length_of_sequence;;

	<= nrel_sc_text_translation: ... (*
		-> [В связном графе между любыми двумя вершинами существует маршрут] (* <- lang_ru;; *);;
		-> [In a connected graph, there exists a route between any two vertices] (* <- lang_en;; *);;
	*);;

	=> nrel_main_idtf:
		[Утв. (Теорема о существовании маршрута)] (* <- lang_ru;; *);
		[Stat. (Route existence theorem)] (* <- lang_en;; *);;

	=> nrel_using_constants: {
		concept_graph_sequence;
		concept_connected_graph
	};;
*);;

sc_node_class ->
	concept_edge;
	concept_sequence;
	concept_vertex;
	concept_sequence;
	concept_graph_sequence;
	concept_edge;
	concept_graph_sequence;
	concept_graph_sequence;
	concept_connected_graph;;

sc_node_role_relation ->
	rrel_edge;
	rrel_vertex;;
