concept_spanning_sequence
=> nrel_main_idtf:
	[остовный маршрут] (* <- lang_ru;; *);
	[spanning sequence] (* <- lang_en;; *);

=> nrel_idtf:
	[охватывающий маршрут] (* <- lang_ru;; *);
	[spanning route] (* <- lang_en;; *);;

definition -> definition_of_spanning_sequence (*
	-> rrel_key_sc_element: concept_spanning_sequence;;

	<= nrel_sc_text_translation: ... (*
		-> [Маршрут, содержащий все вершины орграфа] (* <- lang_ru;; *);;
		-> [The sequence, that contains all verteces in directed graph] (* <- lang_en;; *);;
	*);;

	=> nrel_main_idtf:
		[Опр. (остовный маршрут)] (* <- lang_ru;; *);
		[Def. (spanning sequence)] (* <- lang_en;; *);;

	=> nrel_using_constants: {
		concept_directed_graph;
		concept_graph_sequence;
		concept_vertex;
		rrel_vertex
	};;
*);;

statement -> statement_of_spanning_route_existence_theorem (*
	-> rrel_key_sc_element: concept_spanning_sequence;;

	<= nrel_sc_text_translation: ... (*
		-> [В связном графе всегда существует охватывающий маршрут] (* <- lang_ru;; *);;
		-> [In a connected graph, there always exists a spanning route] (* <- lang_en;; *);;
	*);;

	=> nrel_main_idtf:
		[Утв. (Теорема о существовании охватывающего маршрута)] (* <- lang_ru;; *);
		[Stat. (Spanning route existence theorem)] (* <- lang_en;; *);;

	=> nrel_using_constants: {
		concept_connected_graph
	};;
*);;

statement -> statement_of_spanning_route_uniqueness_theorem (*
	-> rrel_key_sc_element: concept_spanning_sequence;;

	<= nrel_sc_text_translation: ... (*
		-> [В связном графе охватывающий маршрут единственный] (* <- lang_ru;; *);;
		-> [In a connected graph, the spanning route is unique] (* <- lang_en;; *);;
	*);;

	=> nrel_main_idtf:
		[Утв. (Теорема о единственности охватывающего маршрута)] (* <- lang_ru;; *);
		[Stat. (Spanning route uniqueness theorem)] (* <- lang_en;; *);;

	=> nrel_using_constants: {
		concept_connected_graph
	};;
*);;

sc_node_class ->
	concept_directed_graph;
	concept_graph_sequence;
	concept_vertex;
	concept_connected_graph;
	concept_connected_graph;;

sc_node_role_relation ->
	rrel_vertex;;
