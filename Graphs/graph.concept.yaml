ru: граф
en: graph
definition:
  ru:
    Граф есть совокупность двух множеств непустого множества V и множества E.
    Множество V называется множеством вершин, множество E называется множеством
    рёбер. Множество E подмножество декартова произведения V
  en:
    A graph is a pair of a non-empty set V and a set E. The set V is called set
    of vertices, the set E is called the set of edges. Set E subset of the
    Cartesian product V
  using:
    concepts: |
      vertex
      edge
    rrels: |
      vertex
      edge
statement:
  graphs_representation:
    title:
      ru: Изображение графов
      en: Graphs representation
    ru:
      Графы удобно изображать в виде рисунков, состоящих из точек и линий,
      соединяющих некоторые из этих точек. При этом точки соответствуют вершинам
      графа, а соединяющие пары точек линии соответствуют рёбрам
    en:
      Graphs are usualy represented in the form of drawings consisting of dots
      and lines, connecting some of these points. In this case points are equal
      to the vertices of the graph and lines are equal to the edges
    using:
      concepts: |
        vertex
        edge
      rrels: |
        vertex
        edge
  edges_in_graph:
    title:
      ru: Рёбра графа
      en: Graph edges
    ru: Граф может иметь как и ориентированные, так и неориентированные рёбра
    en: A graph can have both directed and undirected edges
    using:
      concepts: |
        edge
        vertex
        arc
      rrels: |
        edge
        vertex
        arc
  usage_in_problems:
    title:
      ru: Использование в задачах
      en: Usage in problems
    ru:
      Графы используются для решения различных задач. Если в задаче удаётся
      использовать графы, то это придаёт задаче наглядность и простоту.
      Например, графы незаменимы в проектировании транспортных сетей
    en:
      Graphs are used to solve various problems. If the graph is used
      successfully in the task, then this gives the task clarity and simplicity.
      For example, graphs are indispensable in designing profitable networks
    using:
      concepts: |
        vertex
        edge
      rrels: |
        vertex
        edge
subclass:
  - directed_graph
  - complete_graph
  - undirected_graph
  - hypergraph
  - multigraph
  - tightened_graph
  - graph_diamond
  - triangle_graph
  - planar_graph
  - simple_graph
  - unweighted_graph
  - supergraph
  - tree
  - heap
  - acyclic_weighted_directed_graph
  - external_graph
  - unplanar_graph
  - one_planar_graph
  - tournament_graph
  - normalized_graph
  - mixed_graph
  - counterfunctional_graph
  - acyclic_graph
  - dag_with_single_source_and_sink
  - dag_with_sink
  - dag_with_source_and_sink
  - dag_with_source
  - dag
  - topological_sorting
  - conditional_inference_forest
  - decision_forest
  - extra_trees_forest
  - forest
  - polyforest
  - pseudoforest
  - random_forest
  - two_three_tree
  - aa_tree
  - avl_tree
  - b_tree
  - balanced_tree
  - bicentre_tree
  - bichromatic_graph
  - binomial_tree
  - brother_tree
  - bsp_tree
  - cartesian_tree
  - cover_tree
  - dancing_tree
  - decision_tree
  - fenwick_tree
  - fibonacci_tree
  - growing_tree
  - irreducible_tree
  - justified_tree
  - k_d_tree
  - left_linear_tree
  - matrix_tree
  - minimum_spanning_tree
  - n_ary_tree
  - octree
  - ordered_tree
  - perfectly_balanced_tree
  - polytree
  - r_tree
  - radix_tree
  - range_maximum_tree
  - red_black_tree
  - quadtree
  - rooted_tree
  - segment_tree
  - self_balancing_search_tree
  - sorting_tree
  - spanning_tree
  - star_tree
  - suffix_tree
  - ternary_search_tree
  - trie
  - undirected_tree
  - van_emde_boas_tree
  - vantage_point_tree
  - bipartite_graph
  - hypertree
  - multitree
  - subtree
  - leaf
  - tree_depth
  - tree_root
  - tree_height
  - polygonal_map_quadtree
  - quadtree
  - binary_heap
  - biparental_heap
  - d_ary_heap
  - fibonacci_heap
  - leftist_heap
  - max_heap
  - min_heap
  - heap
  - tournament_graph
  - directed_forest
  - directed_tree
  - oriented_eulerian_graphs
  - normalized_graph
  - mixed_graph
  - orientable_graph
  - directed_hypergraph
  - directed_multigraph
  - inverse_graph
  - counterfunctional_graph
  - weighted_edge
  - acyclic_weighted_directed_graph
  - strongly_connected_weighted_directed_graph
  - graph_traversal
  - shortest_path_problem
  - tree_traversal
  - breadth_traversal
  - depth_traversal
  - in_order_traversal
  - pre_order_traversal
  - post_order_traversal
  - reverse_pre_order_traversal
  - reverse_post_order_traversal
  - reverse_in_order_traversal
  - dijkstra_algorithm
  - floyd_warshall_algorithm
  - bridge
  - non_separable_graph
  - separable_graph
  - trivial_graph
  - block_cutpoint_graph
  - connected_graph
  - disconnected_graph
  - maximum_graph_cut
  - minimum_graph_cut
  - graph_cut_space
  - s_t_cut
  - sparsest_cuts
  - graph_cut
  - graph_cut_set
  - graph_connectivity
  - graph_algorithm
  - vector_space
  - orthogonal_complement
  - gomory_hu_tree
  - complete_bipartite_graph
  - graph_split_decomposition
  - distance_hereditary_graph
  - circle_graph
  - graph_split
  - max_cut_problem
  - bipartite_subgraph
  - weighted_max_cut
  - weighted_max_cut_problem
  - number_of_minimum_graph_cuts
  - segmentation_based_object_categorization
  - graph_sink
  - dual_graph
  - self_dual_graph
  - abstract_dual_graph
  - graph_eccentricity
  - adjacency_list
  - incidence_list
  - adjacency_matrix
  - incidence_matrix
  - analytical_method_graph_representation
  - graphical_way_graph_representation
  - spanning_sequence
  - directed_sequence
  - graph_sequence
  - hamiltonian_path
  - shortest_path
  - longest_path
  - eulerian_path
  - graph_eccentricity
  - min_weight_path
  - not_trivial_path
  - cyclic_graph
  - hamiltonian_cycle
  - eulerian_cycle
  - basic_cycle
  - minimum_weight_cycle
  - graph_cycle
  - graph_path
  - simple_graph_chain
  - hamiltonian_chain
  - alternating_chain
  - graph_subchain
  - eulerian_chain
  - graph_chain
  - directed_multigraph
  - undirected_multigraph
  - multiple_edges
  - multiple_arcs
  - directed_hypergraph
  - undirected_hypergraph
  - hypergraph_edge
  - triangle_graph
  - graph_diamond
  - medial_graph
  - external_planar_graph
  - graph_halina
  - external_graph
  - unplanar_graph
  - one_planar_graph
  - vertex_coloring
  - edge_coloring
  - color_class
  - chromatic_polynomial
  - coloring_areas
  - total_coloring
  - genus
  - eulers_genus
  - maximum_genus
  - graph_embedding
  - graph_coloring
  - planar_graph
  - bicoloured_subgraph
  - isometric_subgraph
  - induced_subgraph
  - tightened_subgraph
  - complete_subgraph
  - subgraph