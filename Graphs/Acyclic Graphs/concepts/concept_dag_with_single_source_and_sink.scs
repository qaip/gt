concept_dag_with_single_source_and_sink
=> nrel_main_idtf:
	[ориентированный ациклический граф с единственным истоком и стоком] (* <- lang_ru;; *);
	[directed acyclic graph with a single source and sink] (* <- lang_en;; *);


=> nrel_inclusion:
tree_with_single_source_and_sink;;

definition -> definition_of_dag_with_single_source_and_sink (*
	-> rrel_key_sc_element: concept_dag_with_single_source_and_sink;;

	<= nrel_sc_text_translation: ... (*
		-> [Ациклический ориентированный граф, имеющий единственную вершину, из которой исходит все ребра, и единственную вершину, в которую входят все ребра] (* <- lang_ru;; *);;
		-> [A directed acyclic graph that has a single vertex from which all edges originate and a single vertex to which all edges terminate] (* <- lang_en;; *);;
	*);;

	=> nrel_main_idtf:
		[Опр. (ориентированный ациклический граф с единственным истоком и стоком)] (* <- lang_ru;; *);
		[Def. (directed acyclic graph with a single source and sink)] (* <- lang_en;; *);;

	=> nrel_using_constants: {
		concept_directed_acyclic_graph;
		concept_vertex;
		concept_edge;
		concept_source_vertex;
		concept_sink_vertex;
		nrel_incoming_edge;
		nrel_outgoing_edge
	};;
*);;

statement -> statement_of_theorem_single_source_and_sink (*
	-> rrel_key_sc_element: concept_dag_with_single_source_and_sink;;

	<= nrel_sc_text_translation: ... (*
		-> [В ориентированном ациклическом графе с единственным истоком и стоком каждая вершина может быть топологически отсортирована таким образом, что исток стоит первым, а сток стоит последним] (* <- lang_ru;; *);;
		-> [In a directed acyclic graph with a single source and sink, each vertex can be topologically sorted in such a way that the source is the first vertex and the sink is the last vertex in the ordering] (* <- lang_en;; *);;
	*);;

	=> nrel_main_idtf:
		[Утв. (Теорема о единственном истоке и стоке)] (* <- lang_ru;; *);
		[Stat. (Theorem of single source and sink)] (* <- lang_en;; *);;

	=> nrel_using_constants: {
		concept_source_vertex;
		concept_sink_vertex;
		concept_topological_sorting;
		rrel_first_element;
		rrel_last_element;
		nrel_topological_ordering
	};;
*);;

sc_node_class ->
	concept_directed_acyclic_graph;
	concept_vertex;
	concept_edge;
	concept_source_vertex;
	concept_sink_vertex;
	concept_source_vertex;
	concept_sink_vertex;
	concept_topological_sorting;;

sc_node_norole_relation ->
	nrel_incoming_edge;
	nrel_outgoing_edge;
	nrel_topological_ordering;;

sc_node_role_relation ->
	rrel_first_element;
	rrel_last_element;;
