concept_acyclic_graph
=> nrel_main_idtf:
	[ациклический граф] (* <- lang_ru;; *);
	[acyclic graph] (* <- lang_en;; *);


=> nrel_inclusion:
concept_directed_acyclic_graph;
concept_polyforest;
concept_pseudoforest;
concept_random_forest;
concept_decision_forest;
concept_extra_trees_forest;
concept_conditional_inference_forest;
concept_forest;
concept_two_three_tree;
concept_aa_tree;
concept_avl_tree;
concept_b_tree;
concept_balanced_tree;
concept_bicentre_tree;
concept_bichromatic_graph;
concept_binomial_tree;
concept_brother_tree;
concept_bsp_tree;
concept_cartesian_tree;
concept_cover_tree;
concept_dancing_tree;
concept_decision_tree;
concept_fenwick_tree;
concept_fibonacci_tree;
concept_growing_tree;
concept_irreducible_tree;
concept_justified_tree;
concept_k_d_tree;
concept_left_linear_tree;
concept_matrix_tree;
concept_minimum_spanning_tree;
concept_n_ary_tree;
concept_octree;
concept_ordered_tree;
concept_perfectly_balanced_tree;
concept_polytree;
concept_r_tree;
concept_radix_tree;
concept_range_maximum_tree;
concept_red_black_tree;
concept_rooted_tree;
concept_segment_tree;
concept_self_balancing_search_tree;
concept_sorting_tree;
concept_spanning_tree;
concept_star_tree;
concept_suffix_tree;
concept_ternary_search_tree;
concept_trie;
concept_undirected_tree;
concept_van_emde_boas_tree;
concept_vantage_point_tree;
concept_bipartite_graph;
concept_hypertree;
concept_multitree;
concept_subtree;
concept_leaf;
concept_tree_depth;
concept_tree_root;
concept_tree_height;
concept_tree;
concept_binary_search_tree;
concept_binary_tree;
concept_binary_heap;
concept_biparental_heap;
concept_d_ary_heap;
concept_fibonacci_heap;
concept_leftist_heap;
concept_max_heap;
concept_min_heap;
concept_heap;
concept_polygonal_map_quadtree;
concept_quadtree;;

definition -> definition_of_acyclic_graph (*
	-> rrel_key_sc_element: concept_acyclic_graph;;

	<= nrel_sc_text_translation: ... (*
		-> [Граф, не содержащий циклов] (* <- lang_ru;; *);;
		-> [A graph that does not contain any cycles] (* <- lang_en;; *);;
	*);;

	=> nrel_main_idtf:
		[Опр. (ациклический граф)] (* <- lang_ru;; *);
		[Def. (acyclic graph)] (* <- lang_en;; *);;

	=> nrel_using_constants: {
		concept_graph;
		concept_cycle
	};;
*);;

statement -> statement_of_theorem_topological_sort (*
	-> rrel_key_sc_element: concept_acyclic_graph;;

	<= nrel_sc_text_translation: ... (*
		-> [В любом ациклическом графе можно упорядочить вершины так, чтобы для каждого ребра u, v вершина u предшествовала вершине v в этом упорядочении] (* <- lang_ru;; *);;
		-> [It is possible to order the vertices of any acyclic graph such that vertex u precedes vertex v in the ordering for every edge u, v] (* <- lang_en;; *);;
	*);;

	=> nrel_main_idtf:
		[Утв. (Теорема о топологической сортировке)] (* <- lang_ru;; *);
		[Stat. (Topological sort theorem)] (* <- lang_en;; *);;

	=> nrel_using_constants: {
		concept_acyclic_graph;
		concept_vertex;
		concept_edge;
		concept_topological_sorting;
		nrel_topological_ordering
	};;
*);;

sc_node_class ->
	concept_graph;
	concept_cycle;
	concept_acyclic_graph;
	concept_vertex;
	concept_edge;
	concept_topological_sorting;;

sc_node_norole_relation ->
	nrel_topological_ordering;;
