concept_dag
=> nrel_main_idtf:
	[ориентированный ациклический граф] (* <- lang_ru;; *);
	[directed acyclic graph] (* <- lang_en;; *);

=> nrel_idtf:
	[DAG] (* <- lang_en;; *);


=> nrel_inclusion:
concept_dag_with_single_source_and_sink;
concept_dag_with_source_and_sink;
concept_dag_with_source;
concept_dag_with_sink;;

definition -> definition_of_dag (*
	-> rrel_key_sc_element: concept_dag;;

	<= nrel_sc_text_translation: ... (*
		-> [Ориентированный граф без циклов] (* <- lang_ru;; *);;
		-> [Граф, в котором не существует ни одной последовательности вершин, начинающейся и заканчивающейся на одной и той же вершине, и при этом образующей замкнутый цикл при следовании по направлениям рёбер] (* <- lang_ru;; *);;
		-> [A directed graph with no cycles] (* <- lang_en;; *);;
		-> [A graph in which there is no sequence of vertices that starts and ends at the same vertex and forms a closed loop when following the direction of the edges] (* <- lang_en;; *);;
	*);;

	=> nrel_main_idtf:
		[Опр. (ориентированный ациклический граф)] (* <- lang_ru;; *);
		[Def. (directed acyclic graph)] (* <- lang_en;; *);;

	=> nrel_using_constants: {
		concept_directed_graph;
		concept_acyclic_graph;
		concept_closed_loop;
		concept_cycle;
		concept_vertex;
		concept_edge;
		concept_sequence;
		concept_edge_direction
	};;
*);;

statement -> statement_of_proposition_topological_ordering (*
	-> rrel_key_sc_element: concept_dag;;

	<= nrel_sc_text_translation: ... (*
		-> [Для любого ориентированного ациклического графа существует такой порядок вершин, в котором каждое ребро идет от вершины с меньшим номером к вершине с большим номером] (* <- lang_ru;; *);;
		-> [For any directed acyclic graph, there exists a topological ordering of its vertices such that every edge goes from a vertex with a lower number to a vertex with a higher number] (* <- lang_en;; *);;
	*);;

	=> nrel_main_idtf:
		[Утв. (Существование топологического порядка)] (* <- lang_ru;; *);
		[Stat. (Existence of a topological ordering)] (* <- lang_en;; *);;

	=> nrel_using_constants: {
		concept_vertex;
		concept_edge;
		concept_numbering;
		nrel_incoming_edge;
		nrel_outgoing_edge;
		nrel_topological_ordering
	};;
*);;

sc_node_class ->
	concept_directed_graph;
	concept_acyclic_graph;
	concept_closed_loop;
	concept_cycle;
	concept_vertex;
	concept_edge;
	concept_sequence;
	concept_edge_direction;
	concept_vertex;
	concept_edge;
	concept_numbering;;

sc_node_norole_relation ->
	nrel_incoming_edge;
	nrel_outgoing_edge;
	nrel_topological_ordering;;
