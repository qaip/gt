concept_polyforest
=> nrel_main_idtf:
	[полилес] (* <- lang_ru;; *);
	[polyforest] (* <- lang_en;; *);;

definition -> definition_of_polyforest (*
	-> rrel_key_sc_element: concept_polyforest;;

	<= nrel_sc_text_translation: ... (*
		-> [Несколько изолированных лесов] (* <- lang_ru;; *);;
		-> [A collection of isolated forests] (* <- lang_en;; *);;
	*);;

	=> nrel_main_idtf:
		[Опр. (полилес)] (* <- lang_ru;; *);
		[Def. (polyforest)] (* <- lang_en;; *);;

	=> nrel_using_constants: {
		concept_forest
	};;
*);;

statement -> statement_of_forest_count_theorem (*
	-> rrel_key_sc_element: concept_polyforest;;

	<= nrel_sc_text_translation: ... (*
		-> [Полилес с n узлами имеет k лесов тогда и только тогда, когда он имеет n-k связей] (* <- lang_ru;; *);;
		-> [A polyforest with n nodes has k forests if and only if it has n-k edges] (* <- lang_en;; *);;
	*);;

	=> nrel_main_idtf:
		[Утв. (Теорема о количестве лесов в полилесу)] (* <- lang_ru;; *);
		[Stat. (Theorem on the number of forests in a polyforest)] (* <- lang_en;; *);;

	=> nrel_using_constants: {
		concept_forest;
		concept_edge;
		rrel_edge
	};;
*);;

statement -> statement_of_polyforest_distance_theorem (*
	-> rrel_key_sc_element: concept_polyforest;;

	<= nrel_sc_text_translation: ... (*
		-> [Расстояние между двумя лесами в полилесу равно длине кратчайшего пути между двумя связующими узлами в двух лесах] (* <- lang_ru;; *);;
		-> [The distance between two forests in a polyforest is equal to the length of the shortest path between two connecting nodes in the two forests] (* <- lang_en;; *);;
	*);;

	=> nrel_main_idtf:
		[Утв. (Теорема о расстоянии между лесами в полилесу)] (* <- lang_ru;; *);
		[Stat. (Theorem on distance between forests in a polyforest)] (* <- lang_en;; *);;

	=> nrel_using_constants: {
		concept_forest;
		concept_vertex;
		concept_distance;
		concept_shortest_path;
		rrel_vertex
	};;
*);;

sc_node_class ->
	concept_forest;
	concept_forest;
	concept_edge;
	concept_forest;
	concept_vertex;
	concept_distance;
	concept_shortest_path;;

sc_node_role_relation ->
	rrel_edge;
	rrel_vertex;;
