concept_justified_tree
=> nrel_main_idtf:
	[оправданное дерево] (* <- lang_ru;; *);
	[justified_tree] (* <- lang_en;; *);;

definition -> definition_of_justified_tree (*
	-> rrel_key_sc_element: concept_justified_tree;;

	<= nrel_sc_text_translation: ... (*
		-> [Дерево, в котором для каждого узла соблюдается условие минимальности] (* <- lang_ru;; *);;
		-> [A tree in which each node satisfies a minimality condition] (* <- lang_en;; *);;
	*);;

	=> nrel_main_idtf:
		[Опр. (оправданное дерево)] (* <- lang_ru;; *);
		[Def. (justified_tree)] (* <- lang_en;; *);;

	=> nrel_using_constants: {
		concept_tree;
		concept_vertex;
		rrel_vertex
	};;
*);;

statement -> statement_of_justifiable_tree_theorem (*
	-> rrel_key_sc_element: concept_justified_tree;;

	<= nrel_sc_text_translation: ... (*
		-> [Дерево является оправданным тогда и только тогда, когда каждый узел является оптимальным по отношению к своим потомкам] (* <- lang_ru;; *);;
		-> [A tree is justified if and only if each node is optimal with respect to its children] (* <- lang_en;; *);;
	*);;

	=> nrel_main_idtf:
		[Утв. (Теорема о оправданном дереве)] (* <- lang_ru;; *);
		[Stat. (Justified tree theorem)] (* <- lang_en;; *);;

	=> nrel_using_constants: {
		concept_vertex;
		concept_subtree;
		concept_justified_tree;
		rrel_vertex
	};;
*);;

statement -> statement_of_balanced_tree_theorem (*
	-> rrel_key_sc_element: concept_justified_tree;;

	<= nrel_sc_text_translation: ... (*
		-> [Сбалансированное дерево является оправданным] (* <- lang_ru;; *);;
		-> [A balanced tree is a justified tree] (* <- lang_en;; *);;
	*);;

	=> nrel_main_idtf:
		[Утв. (Теорема о сбалансированном дереве)] (* <- lang_ru;; *);
		[Stat. (Balanced tree theorem)] (* <- lang_en;; *);;

	=> nrel_using_constants: {
		concept_balanced_tree;
		concept_justified_tree;
		concept_tree
	};;
*);;

sc_node_class ->
	concept_tree;
	concept_vertex;
	concept_vertex;
	concept_subtree;
	concept_justified_tree;
	concept_balanced_tree;
	concept_justified_tree;
	concept_tree;;

sc_node_role_relation ->
	rrel_vertex;
	rrel_vertex;;
