concept_dancing_tree
=> nrel_main_idtf:
	[танцующее дерево] (* <- lang_ru;; *);
	[dancing tree] (* <- lang_en;; *);;

definition -> definition_of_dancing_tree (*
	-> rrel_key_sc_element: concept_dancing_tree;;

	<= nrel_sc_text_translation: ... (*
		-> [Cпособ визуализации покрывающего дерева, который позволяет увидеть иерархию элементов и связей между ними] (* <- lang_ru;; *);;
		-> [A dancing tree is a visualization technique for a spanning tree that allows you to see the hierarchy of elements and the connections between them] (* <- lang_en;; *);;
	*);;

	=> nrel_main_idtf:
		[Опр. (танцующее дерево)] (* <- lang_ru;; *);
		[Def. (dancing tree)] (* <- lang_en;; *);;

	=> nrel_using_constants: {
		concept_graph;
		concept_vertex;
		concept_edge;
		concept_tree;
		rrel_vertex;
		rrel_edge
	};;
*);;

statement -> statement_of_dancing_tree_representation (*
	-> rrel_key_sc_element: concept_dancing_tree;;

	<= nrel_sc_text_translation: ... (*
		-> [Танцующее дерево представляет собой дерево, где каждый узел является вершиной покрывающего дерева. Узлы располагаются на разных уровнях в соответствии с их глубиной в дереве, а связи между ними отображаются линиями. При этом узлы на одном уровне выравниваются таким образом, чтобы они занимали минимально возможное пространство. Таким образом, танцующее дерево позволяет быстро и наглядно увидеть иерархию элементов и связи между ними] (* <- lang_ru;; *);;
		-> [A dancing tree is a tree where each node is a vertex of the spanning tree. The nodes are placed on different levels according to their depth in the tree, and the connections between them are shown by lines. At the same time, the nodes at the same level are aligned in such a way that they occupy the minimum possible space. Thus, a dancing tree allows you to quickly and visually see the hierarchy of elements and the connections between them] (* <- lang_en;; *);;
	*);;

	=> nrel_main_idtf:
		[Утв. (Изображение танцующего дерева)] (* <- lang_ru;; *);
		[Stat. (Dancing trees representation)] (* <- lang_en;; *);;

	=> nrel_using_constants: {
		concept_vertex;
		concept_edge;
		rrel_vertex;
		rrel_edge
	};;
*);;

sc_node_class ->
	concept_graph;
	concept_vertex;
	concept_edge;
	concept_tree;
	concept_vertex;
	concept_edge;;

sc_node_role_relation ->
	rrel_vertex;
	rrel_edge;
	rrel_vertex;
	rrel_edge;;
