concept_bicoloured_subgraph
=> nrel_main_idtf:
	[двуцветный подграф] (* <- lang_ru;; *);
	[bicoloured subgraph] (* <- lang_en;; *);;

definition -> definition_of_bicoloured_subgraph (*
	-> rrel_key_sc_element: concept_bicoloured_subgraph;;

	<= nrel_sc_text_translation: ... (*
		-> [Подграф правильно раскрашенного графа, порожденный вершинами, окрашенными в два заданных цвета называется двуцветным подграфом] (* <- lang_ru;; *);;
		-> [A subgraph of a properly colored graph generated by vertices colored in two given colors is called a two-color subgraph] (* <- lang_en;; *);;
	*);;

	=> nrel_main_idtf:
		[Опр. (двуцветный подграф)] (* <- lang_ru;; *);
		[Def. (bicoloured subgraph)] (* <- lang_en;; *);;

	=> nrel_using_constants: {
		concept_graph;
		concept_vertex;
		concept_edge;
		concept_graph_coloring;
		rrel_vertex;
		rrel_edge
	};;
*);;

statement -> statement_of_condition_of_bicoloured (*
	-> rrel_key_sc_element: concept_bicoloured_subgraph;;

	<= nrel_sc_text_translation: ... (*
		-> [Граф двуцветный тогда и только тогда, когда он не имеет нечетных графовых циклов] (* <- lang_ru;; *);;
		-> [A graph is bicolorable if it has no odd graph cycles] (* <- lang_en;; *);;
	*);;

	=> nrel_main_idtf:
		[Утв. (Условие двуцветности графа)] (* <- lang_ru;; *);
		[Stat. (The condition of a bicoloured subgraph)] (* <- lang_en;; *);;

	=> nrel_using_constants: {
		concept_graph_coloring;
		concept_graph;
		concept_graph_cycles
	};;
*);;

statement -> statement_of_bicolouring_theorem (*
	-> rrel_key_sc_element: concept_bicoloured_subgraph;;

	<= nrel_sc_text_translation: ... (*
		-> [Любой граф имеет двухцветный подграф, содержащий каждую вершину] (* <- lang_ru;; *);;
		-> [Every graph has a bicoloured subgraph that contains every vertex] (* <- lang_en;; *);;
	*);;

	=> nrel_main_idtf:
		[Утв. (Теорема о двухцветном подграфе)] (* <- lang_ru;; *);
		[Stat. (Bicolouring theorem)] (* <- lang_en;; *);;

	=> nrel_using_constants: {
		concept_graph;
		concept_subgraph;
		concept_vertex;
		rrel_vertex;
		nrel_subgraph
	};;
*);;

sc_node_class ->
	concept_graph;
	concept_vertex;
	concept_edge;
	concept_graph_coloring;
	concept_graph_coloring;
	concept_graph;
	concept_graph_cycles;
	concept_graph;
	concept_subgraph;
	concept_vertex;;

sc_node_norole_relation ->
	nrel_subgraph;;

sc_node_role_relation ->
	rrel_vertex;
	rrel_edge;
	rrel_vertex;;
