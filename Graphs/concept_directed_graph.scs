concept_directed_graph
=> nrel_main_idtf:
	[ориентированный граф] (* <- lang_ru;; *);
	[directed graph] (* <- lang_en;; *);

=> nrel_idtf:
	[орграф] (* <- lang_ru;; *);
	[igraph] (* <- lang_en;; *);


=> nrel_inclusion:
concept_tournament_graph;
concept_directed_forest;
concept_directed_tree;
concept_oriented_eulerian_graphs;
concept_normalized_graph;
concept_mixed_graph;
concept_component_of_directed_graph;
concept_orientable_graph;
concept_transport_network;
concept_oriented_multigraph;
concept_inverse_graph;
concept_complete_count_of_berge;
concept_counterfunctional_graph;;

definition -> definition_of_directed_graph (*
	-> rrel_key_sc_element: concept_directed_graph;;

	<= nrel_sc_text_translation: ... (*
		-> [Граф, в котором для каждой упорядоченной пары вершин определена направленность ребра] (* <- lang_ru;; *);;
		-> [A graph in which each pair of vertices is connected by a directed edge] (* <- lang_en;; *);;
	*);;

	=> nrel_main_idtf:
		[Опр. (ориентированный граф)] (* <- lang_ru;; *);
		[Def. (directed graph)] (* <- lang_en;; *);;

	=> nrel_using_constants: {
		concept_graph;
		concept_vertex;
		nrel_arc
	};;
*);;

statement -> statement_of_theorem_menger (*
	-> rrel_key_sc_element: concept_directed_graph;;

	<= nrel_sc_text_translation: ... (*
		-> [Для любых двух вершин в ориентированном графе минимальное число вершин, которые нужно удалить, чтобы отсечь все пути между ними, равно максимальному числу не пересекающихся путей между ними] (* <- lang_ru;; *);;
		-> [For any two vertices in a directed graph, the minimum number of vertices that must be removed to disconnect all paths between them is equal to the maximum number of non-intersecting paths between them] (* <- lang_en;; *);;
	*);;

	=> nrel_main_idtf:
		[Утв. (Теорема Менгера)] (* <- lang_ru;; *);
		[Stat. (Mengers Theorem)] (* <- lang_en;; *);;

	=> nrel_using_constants: {
		concept_vertex;
		concept_path;
		nrel_intersection
	};;
*);;

sc_node_class ->
	concept_graph;
	concept_vertex;
	concept_vertex;
	concept_path;;

sc_node_norole_relation ->
	nrel_arc;
	nrel_intersection;;
