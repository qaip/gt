concept_bridge
=> nrel_main_idtf:
	[мост] (* <- lang_ru;; *);
	[bridge] (* <- lang_en;; *);;

definition -> definition_of_bridge (*
	-> rrel_key_sc_element: concept_bridge;;

	<= nrel_sc_text_translation: ... (*
		-> [Ребро, удаление которого увеличивает число компонент связности] (* <- lang_ru;; *);;
		-> [A bridge is an edge which removal increases the number of connected components] (* <- lang_en;; *);;
	*);;

	=> nrel_main_idtf:
		[Опр. (мост)] (* <- lang_ru;; *);
		[Def. (bridge)] (* <- lang_en;; *);;

	=> nrel_using_constants: {
		concept_edge;
		rrel_edge;
		nrel_connected_component
	};;
*);;

statement -> statement_of_finding_bridges (*
	-> rrel_key_sc_element: concept_bridge;;

	<= nrel_sc_text_translation: ... (*
		-> [Алгоритмы поиска мостов используются для поиска наименьшего количества ребер, которые при удалении приведут к увеличению числа компонент связности графа] (* <- lang_ru;; *);;
		-> [Algorithms for finding bridges are used to find the smallest number of edges that, when removed, will increase the number of connected components in the graph] (* <- lang_en;; *);;
	*);;

	=> nrel_main_idtf:
		[Утв. (Поиск мостов в графе)] (* <- lang_ru;; *);
		[Stat. (Finding bridges in a graph)] (* <- lang_en;; *);;

	=> nrel_using_constants: {
		concept_edge;
		rrel_edge;
		nrel_connected_component
	};;
*);;

sc_node_class ->
	concept_edge;
	concept_edge;;

sc_node_norole_relation ->
	nrel_connected_component;
	nrel_connected_component;;

sc_node_role_relation ->
	rrel_edge;
	rrel_edge;;
